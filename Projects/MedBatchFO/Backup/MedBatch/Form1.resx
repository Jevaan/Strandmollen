<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABQAA
        ABMAAAAqAgICQQYGBlAGBgZSBAQERgAAADAAAAAZAAAACAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAEAAA
        BEMBAB+TGgMTzTsIA+ygi4j62NjY/9ra2v/Ozs78sbGx8YSEhNhLS0umEBAQWQAAABoAAAADAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAA
        BksBADG6AQBn9wIAgf8/Ejv/bSMT/8qwqv/29vb/9vb2//X19f/z8/P/7+/v/+bm5v/Nzc39eXl50hsb
        G2sAAAAUAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        ABwTBAKVGQM49gMAh/8KAJX/EACf/1YhUf+IOSX/2L22//7+/v/+/v7//f39//39/f/7+/v/+vr6//X1
        9f/r6+v/zMzM/V1dXbwDAwMzAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAICAgIqOickwVQSBv83D1L/EQCg/xcAqP8bAK//Zite/5dHL//dw7r///////////////////////7+
        /v/+/v7//f39//v7+//09PT/4uLi/5OTk+IPDw9NAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAgICJXNzc8ujhHv/cioY/0cZZP8aAK3/HQCy/yAAtv9tMWT/n1E1/+DGvf//////////////
        ///////////////////+/v7//v7+//z8/P/39/f/6urq/6KiouoPDw9LAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABNdXV233Nzc/7yck/+EOSX/Uh9t/x8AtP8hALj/JAC8/3U3a/+pWzz/48rA////
        /////////////////////////////////////////v7+//39/f/5+fn/6enp/5OTk+EFBQUwAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAFMDAwfc7Ozv709PT/x6ac/45DK/9YI3T/IwC7/yYAwP8pAMT/fz90/7Ro
        RP/nz8P//////////////////////////////////////////////////v7+//39/f/4+Pj/4uLi/2Nj
        Y7kAAAAQAAAAAAAAAAAAAAAAAAAAAAUFBSyioqLs7e3t//v7+//NrKD/mEwy/18ofP8oAML/KwDH/y4A
        y/+ISH3/vnZN/+rUx////////////////////////////////////////////////////////v7+//z8
        /P/09PT/zs7O/SAgIGEAAAACAAAAAAAAAAAAAAAFRUVFk9ra2v/39/f//f39/9KwpP+hVTj/Zy2D/y0A
        yf8wAM3/NADS/5FRhv/Ihlj/7drL////////////////////////////////////////////////////
        /////////v7+//r6+v/t7e3/f39/zgAAABEAAAAAAAAAAAAAABqZmZnl7e3t//z8/P/+/v7/1bSm/6pe
        Pv9tMor/MQDO/zYA1P86ANj/mVqP/9CUYf/w38//////////////////////////////////////////
        ///////////////////+/v7//f39//b29v/Ly8v9FRUVSAAAAAEAAAABFxQUUrappf/g0s7/6tzX/+3f
        2v/Qp5X/sWdD/3M2kP82ANT/PADZ/0AA3f+gYpf/16Fq/+7Zwv/48ej/+PHo//jx5//48Of/9+/m//fu
        5f/27OT/9eri//Po4f/y5d//8eTe//Dj3f/t4Nr/6NrV/9XFwP9DPDuWAAAABAAAAAMcBQKNZyMQ/4U7
        Jf+VSzD/oVY4/61iQP+3b0j/eTqW/zwA2f9BAN7/RQDi/6Zpnv/crnL/37N2/+C2eP/gtnf/37R2/92w
        c//bqm//16Jq/9KYZP/Mjl3/xIFU/7x1Tf+4cEn/sGZD/6RYOv+aTDD/lTwh/zoMBM0AAAALAAAABh4G
        FLZUHjf/ay9L/3k6V/+HRWL/j0xo/5lWcf9uLq3/QADd/0UA4f9KAOX/lFK4/76Hm//Bip7/woug/8KL
        oP/Bip//v4ec/7yEmf+4fpT/s3eO/65vh/+mZX//nlt2/5tZdP+SUGv/h0Vh/308WP90MEv/OQ4k7AAA
        ABcAAAAJAgBOzQ0Amv8cAK//JwDA/y0AyP8vAMv/NgDT/z4A2/9EAOD/SQDk/04A6P9SAOr/VQDt/1gA
        7v9ZAO//WQDw/1gA7/9WAO7/UgDs/08A6f9KAOX/RQDh/z8A3f85ANb/OADU/zEAzf8rAMX/JAC+/xgA
        tf8DAH/8AAABIQAAAAoAAFDSDgCc/yAAtf8sAMj/LgDK/zEAzv85ANb/QQDd/0YA4f9MAOb/UQDq/1UA
        7P9ZAO//XADx/14A8v9eAPL/XADy/1oA8P9WAO7/UgDr/00A5/9HAOP/QgDf/z4A2v86ANb/MwDO/ywA
        xv8mAMD/GQC0/wMAgf8AAAEkAAAACAEAUMwPAJ3/IwC+/y4Ayv8wAMz/MwDP/zsA2P9CAN7/SADj/04A
        5/9TAOv/WADu/1sA8P9fAPL/YQD0/2EA9P9fAPP/XQDy/1gA7/9UAOz/TwDp/0kA5P9EAOD/QwDd/zsA
        1/80AM//LQDH/ycAwf8ZALP/BAB//QAAAR4AAAAEFAUpsz8XY/9eJ4P/bDCS/28zlf9zNpn/fj+k/2Qh
        x/9JAOT/TwDo/1QA7P+ENtX/oFfH/6Nay/+mW83/plvO/6VazP+iWMn/nlbF/5lTwP+UT7r/jUu0/4lI
        sP+GRa3/fD2i/3I1mP9pL4//YSmH/00ec/8lCkXtAAAAEgAAAAIkCQOIejIb/6dWNv+4bUf/unVM/758
        Uf/Kjl7/i0qn/0kA5P9PAOj/VQDs/7Z4sf/swo3/78aS//LJl//zypj/8ceU/+7Dj//qvoj/5riA/+Gx
        eP/bqXD/2KZy/9Kcaf/Gh1n/u3dO/7JqRf+nXDv/j0In/0QUB8oAAAAHAAAAABkREEmig3n/066g/969
        rf/gw7H/06WI/8qPXv+KSab/SQDj/04A5/9TAOv/tXaw/+zAi//03L//+ejU//no1P/459P/9+XR//Xj
        zv/z4Mr/8dzG/+/axP/t2MT/6tO+/+XKtv/gwrH/3L2t/9SypP+5l4v/QDArjwAAAAIAAAAAAgICD6mp
        qeXx8fH//Pz8//7+/v/gwa//xola/4hIpP9HAOL/TQDm/1EA6v+zdK3/6byH//jr3f//////////////
        //////////////////////////////////////////////7+/v/9/f3/9vb2/8/Pz/4eHh49AAAAAAAA
        AAAAAAACV1dXiODg4P/5+fn//v7+/929rf/DhFb/h0ej/0UA4P9KAOT/TwDn/7Bxqv/mt4L/9+nb////
        /////////////////////////////////////////////////////////v7+//v7+//t7e3/kZGRygEB
        AQgAAAAAAAAAAAAAAAAMDAwct7e37PDw8P/8/Pz/4sOx/8SHWP+HSKP/QwDe/0cA4f9MAOX/rG2l/+Kx
        fP/259n///////////////////////////////////////////////////////7+/v/9/f3/9vb2/9bW
        1v4wMDBRAAAAAQAAAAAAAAAAAAAAAAAAAAFFRUVs2tra//f39//gwK7/wH1S/4ZHov9CANz/RADe/0cA
        4v+naaD/3ap2//Tl1v/////////////////////////////////////////////////+/v7//f39//n5
        +f/q6ur/fX19rwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAQZ7e3ur5ubm/9a0pf+5ckr/gD6b/0AA
        2/9CANz/QwDe/6Fkmf/Xom7/8uLT/////////////////////////////////////////////v7+//39
        /f/6+vr/8fHx/66urt4NDQ0bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkJCRKXl5fExaSV/65h
        PP9zNZD/PQDY/0AA2/9BANz/nF6T/9GaZv/w39D///////////////////////////////////////7+
        /v/9/f3/+vr6//Pz8//AwMDqICAgMwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsL
        CxNuV064l1c8/2Eqfv8tAMv/OwDY/0AA2v+bX5T/z5pm//Dg0f////////////////////////////7+
        /v/9/f3/+/v7//j4+P/x8fH/t7e34CEhITIAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAIBAAc6HRF/Xj159ykRvP8oAMj/NwDV/5dbj//Lk2D/7dzN//7+/v/+/v7//v7+//7+
        /v/9/f3/+/v7//j4+P/z8/P/5ubm/ouLi64PDw8YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIDARQsIR1xrTswsvo3IMD/gUh0/799Tf/o1MX/+vr6//r6
        +v/5+fn/9/f3//T09P/x8fH/6Ojo/6+vr8w6OjpOAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgAWJRMQTnxiRVfAmWNL79TB
        uP/u7u7/7u7u/+vr6//h4eH2ubm50Hp6epEvLy89AwMDBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAIEAgEJGxoZHiQkJDMkJCQ0IyMjJwoKCg0AAAADAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////AA///AAD//gAAP/gAAB/wAAAP4AAAB+AAAAPAAAADwAAAAYAA
        AAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAgAAAAYAAAAHAAAABwAAAA+AA
        AAfwAAAH+AAAD/wAAD/+AAB//4AB///gB/8=
</value>
  </data>
</root>